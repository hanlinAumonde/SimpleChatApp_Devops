name: ChatApp_Microservices

networks:
  chatapp-network:
    driver: bridge
  middleware-network:
    driver: bridge

services:
  # 基础设施服务
  eureka-server:
    build: ./eureka-server
    container_name: chatapp-eureka
    hostname: eureka-server
    ports:
      - "8761:8761"
    networks:
      - chatapp-network
    restart: always

  # config-server: (暂时禁用)
  #   build: ./config-server
  #   container_name: chatapp-config
  #   hostname: config-server
  #   ports:
  #     - "8888:8888"
  #   depends_on:
  #     - eureka-server
  #   networks:
  #     - chatapp-network
  #   restart: always

  api-gateway:
    build: ./api-gateway
    container_name: chatapp-gateway
    hostname: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      # - config-server (暂时禁用)
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - REDIS_HOST=redis
    networks:
      - chatapp-network
      - middleware-network
    restart: always

  # 数据存储服务 (与原项目保持一致)
  postgres:
    image: postgres:latest
    container_name: chatapp-postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=chatAppDB
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ../SQL-Scripts:/docker-entrypoint-initdb.d
    networks:
      - middleware-network
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: chatapp-mongodb
    hostname: mongodb
    command: ["--wiredTigerCacheSizeGB", "0.26"]
    volumes:
      - ./mongodb-data:/data/db
    networks:
      - middleware-network
    restart: always

  rabbitmq:
    image: rabbitmq:management
    container_name: chatapp-rabbitmq
    hostname: rabbitmq
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - middleware-network
    restart: always

  redis:
    image: redis:latest
    container_name: chatapp-redis
    hostname: redis
    networks:
      - middleware-network
    restart: always

  # 前端服务 (修改后端API地址)
  frontend:
    build: ../ChatApp_FrontEnd
    container_name: chatapp-frontend
    hostname: frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /path/to/cert-file:/etc/nginx/certs/cert-file
      - /path/to/cert-key:/etc/nginx/certs/cert-key
      - ./nginx-conf/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - chatapp-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 业务微服务（占位，后续阶段会添加）
  # auth-service:
  #   build: ./auth-service
  #   container_name: chatapp-auth
  #   hostname: auth-service
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - eureka-server
  #   networks:
  #     - chatapp-network
  #     - middleware-network
  #   restart: always

volumes:
  postgres-data:
  mongodb-data: